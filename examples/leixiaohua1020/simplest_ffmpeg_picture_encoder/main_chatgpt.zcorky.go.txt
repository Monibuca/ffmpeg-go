// https://chatgpt.zcorky.com/ 第一次失败，第二次成功
// YUV420P像素数据编码为JPEG图片，请用go语言实现。不要用第三方库
package main

import (
	"bufio"
	"bytes"
	"fmt"
	"image"
	"image/color"
	"image/jpeg"
	"os"
)

func main() {
	// 将YUV420P像素数据读入内存
	yuvFile, err := os.Open("./out/pic.yuv")
	if err != nil {
		fmt.Println(err)
		return
	}
	defer yuvFile.Close()
	width := 640
	height := 360
	yuvData := make([]byte, width*height*3/2)
	yuvReader := bufio.NewReader(yuvFile)
	_, err = yuvReader.Read(yuvData)
	if err != nil {
		fmt.Println(err)
		return
	}

	// 假设您已经读取了 YUV420P 格式的像素数据，并将其存储在 data 变量中
	var yuv []byte = yuvData // YUV420P 数据

	// 创建一个新的 RGBA 图像
	rgbaImg := image.NewRGBA(image.Rect(0, 0, width, height))

	// 将 YUV420P 数据转换为 RGBA 数据
	for i := 0; i < width*height; i++ {
		yi := int(yuv[i])
		ui := int(yuv[width*height+(i/4)])
		vi := int(yuv[width*height+(width*height/4)+(i/4)])

		r := float64(yi) + 1.4065*(float64(vi)-128)
		g := float64(yi) - 0.3455*(float64(ui)-128) - 0.7169*(float64(vi)-128)
		b := float64(yi) + 1.7790*(float64(ui)-128)

		if r < 0 {
			r = 0
		} else if r > 255 {
			r = 255
		}

		if g < 0 {
			g = 0
		} else if g > 255 {
			g = 255
		}

		if b < 0 {
			b = 0
		} else if b > 255 {
			b = 255
		}

		rgbaImg.SetRGBA(i%width, i/width, color.RGBA{
			R: uint8(r),
			G: uint8(g),
			B: uint8(b),
			A: 255,
		})
	}

	// 创建 JPEG 图像文件
	jpgFile, err := os.Create("./out/pic3.jpg")
	if err != nil {
		panic(err)
	}
	defer jpgFile.Close()

	// 使用 image/jpeg 包来编码 JPEG 图像
	buf := new(bytes.Buffer)
	if err := jpeg.Encode(buf, rgbaImg, &jpeg.Options{Quality: 80}); err != nil {
		panic(err)
	}

	_, err = jpgFile.Write(buf.Bytes())
	if err != nil {
		panic(err)
	}
}
